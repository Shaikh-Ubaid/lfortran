name: Test Backends

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test_without_llvm:
    name: Test without LLVM Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: ci/environment_linux.yml
          create-args: >-
            python=3.10

      - name: Test
        shell: bash -e -l {0}
        run: |
          xonsh ci/test_without_llvm_backend.xsh

  test_cpp_build:
    name: Test CPP
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: ci/environment_linux.yml
          create-args: >-
            python=3.10

      - name: Test CPP
        shell: bash -e -l {0}
        run: |
            xonsh ci/test_cpp_version.xsh

  test_wasm:
    name: Test WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: ci/environment_linux.yml
          create-args: >-
            python=3.10
            nodejs=18.13.0

      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-${{ matrix.os }}

      - name: Show Node Info
        shell: bash -e -l {0}
        run: |
          set -ex
          which node
          node --version

      - name: Build Linux
        shell: bash -e -l {0}
        run: |
            ./build0.sh
            cmake . -GNinja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DWITH_LLVM=yes \
              -DLFORTRAN_BUILD_ALL=yes \
              -DWITH_STACKTRACE=no \
              -DCMAKE_PREFIX_PATH="$CONDA_PREFIX" \
              -DCMAKE_INSTALL_PREFIX=`pwd`/inst \
              -DCMAKE_C_COMPILER_LAUNCHER=sccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=sccache

            cmake --build . -j16 --target install

      - name: Test Linux
        shell: bash -e -l {0}
        run: |
            cd integration_tests
            ./run_tests.py -b wasm
            ./run_tests.py -b wasm -f

  test_fortran:
    name: Test Fortran backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: ci/environment_linux.yml
          create-args: >-
            python=3.10

      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-${{ matrix.os }}

      - name: Build Linux
        shell: bash -e -l {0}
        run: |
            ./build0.sh
            cmake . -GNinja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DWITH_LLVM=yes \
              -DLFORTRAN_BUILD_ALL=yes \
              -DWITH_STACKTRACE=no \
              -DCMAKE_PREFIX_PATH="$CONDA_PREFIX" \
              -DCMAKE_INSTALL_PREFIX=`pwd`/inst \
              -DCMAKE_C_COMPILER_LAUNCHER=sccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=sccache

            cmake --build . -j16 --target install

      - name: Test Linux
        shell: bash -e -l {0}
        run: |
            cd integration_tests
            ./run_tests.py -b fortran -j1
            ./run_tests.py -b fortran -f -j1

  test_c_cpp:
    name: Test C/C++ backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@v1.8.0
        with:
          environment-file: ci/environment_linux.yml
          create-args: >-
            python=3.10

      - uses: hendrikmuhs/ccache-action@main
        with:
          variant: sccache
          key: ${{ github.job }}-${{ matrix.os }}

      - name: Build Linux
        shell: bash -e -l {0}
        run: |
            ./build0.sh
            cmake . -GNinja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DWITH_LLVM=yes \
              -DLFORTRAN_BUILD_ALL=yes \
              -DWITH_STACKTRACE=no \
              -DCMAKE_PREFIX_PATH="$CONDA_PREFIX" \
              -DCMAKE_INSTALL_PREFIX=`pwd`/inst \
              -DCMAKE_C_COMPILER_LAUNCHER=sccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=sccache

            cmake --build . -j16 --target install

      - name: Test Linux
        shell: bash -e -l {0}
        run: |
            mkdir build-kokkos
            cd build-kokkos
            wget https://github.com/kokkos/kokkos/archive/3.1.01.tar.gz
            tar xaf 3.1.01.tar.gz
            cd kokkos-3.1.01
            mkdir build
            cd build
            export LFORTRAN_KOKKOS_DIR=$HOME/ext/kokkos
            cmake -DCMAKE_INSTALL_PREFIX=$LFORTRAN_KOKKOS_DIR -DKokkos_ENABLE_OPENMP=On -DKokkos_ARCH_HSW=On ..
            make
            make install
            cd ../../..

            cd integration_tests
            ./run_tests.py -b cpp c c_nopragma
            ./run_tests.py -b cpp c c_nopragma -f
